---
import LogoTechCrafted from '@/assets/logo.webp';
---

<header class="fixed top-0 w-full bg-white dark:bg-gray-500 z-10">
  <nav class="h-16 max-w-7xl mx-auto px-4 py-3 flex items-center justify-between">
          <img
            src={LogoTechCrafted.src}
            alt="TechCrafted Logo"
            id="logo"
            class="h-20"
          />
          <form class="w-72 ml-auto text-black dark:text-white   ">
            <div class="relative">
              <input
                type="text"
                placeholder="Buscar art√≠culos..."
                class="w-full max-w-xs px-3 py-2 border border-neutral-300 bg-neutral-100 rounded-lg
                       focus:outline-none focus:ring-2 focus:ring-blue-500  pl-10"
              />
              <span class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 pointer-events-none">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-4-4m0 0A7 7 0 104 4a7 7 0 0013 13z" />
                </svg>
              </span>
            </div>
          </form>
        </nav>
</header>



<script>
  /** Clave de almacenamiento */
  const STORAGE_KEY = 'theme-preference';        // 'light' | 'dark' | 'system'

  /** Elementos DOM */
  const systemTheme = window.matchMedia('(prefers-color-scheme: dark)');
  const btn  = document.getElementById('themeToggle') || document.createElement('button');
  const icon = document.getElementById('themeIcon') || document.createElement('icon');

  /** MediaQuery para saber si el SO est√° en dark */
  const mq = window.matchMedia('(prefers-color-scheme: dark)');

  /** Lee el √∫ltimo valor o ‚Äúsystem‚Äù por defecto */
  let theme = localStorage.getItem(STORAGE_KEY) || 'system';

  /** Aplica la elecci√≥n al <html> y al icono */
  function applyTheme({value}: { value: any }) {
    if (value === 'light') {
      document.documentElement.classList.remove('dark');
      document.documentElement.classList.add('light');

    } else if (value === 'dark') {
      document.documentElement.classList.remove('light');
      document.documentElement.classList.add('dark');

    } else { // system ‚Üí sin override; obedece al SO
      document.documentElement.classList.toggle('dark', mq.matches);
      document.documentElement.classList.toggle('light', !mq.matches);
    }

    updateIcon({value: value});
  }

  /** Actualiza icono + tooltip */
  function updateIcon({value}: { value: any }) {
    icon.className =
      'fa-solid ' +
      (value === 'light'  ? 'fa-sun'                 // ‚òÄÔ∏è
       : value === 'dark' ? 'fa-moon'                // üåô
       :                   'fa-circle-half-stroke'); // üåì
    btn.title = `${value}`;                          // tooltip
  }

  /** Devuelve el pr√≥ximo estado al hacer clic */
  const next = ({value}: { value: any }) =>
    value === 'light'  ? 'dark'
    : value === 'dark' ? 'system'
    :                   'light';

  /* ‚Äî‚Äî‚Äî Estado inicial ‚Äî‚Äî‚Äî */
  applyTheme({value: theme});

  /* ‚Äî‚Äî‚Äî Reactivar ‚Äúsystem‚Äù cuando el SO cambia ‚Äî‚Äî‚Äî */
  mq.addEventListener('change', () => {
    if (theme === 'system') applyTheme({value: 'system'});
  });

  /* ‚Äî‚Äî‚Äî Clic = siguiente estado ‚Äî‚Äî‚Äî */
  btn.addEventListener('click', () => {
    theme = next({value: theme});
    localStorage.setItem(STORAGE_KEY, theme);
    applyTheme({value: theme});
  });

  /* Suscribe al cambio de tema del SO */
  systemTheme.addEventListener('change', () => {
      if (theme === 'system') applyTheme({value: 'system'});
  });

</script>
